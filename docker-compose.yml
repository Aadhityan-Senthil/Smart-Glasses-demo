version: '3.8'

services:
  smart-glasses:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: smart-glasses-demo
    restart: unless-stopped
    
    # Environment variables
    env_file:
      - .env
    
    # Port mapping
    ports:
      - "8000:8000"
    
    # Volume mounts for persistent data
    volumes:
      - ./videos:/app/videos
      - ./processed:/app/processed
      - ./logs:/app/logs
      - ./models:/app/models
      - /dev/video0:/dev/video0  # Camera device (Linux)
    
    # Device access for camera
    devices:
      - /dev/video0:/dev/video0
    
    # Privileged access for hardware
    privileged: false
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    # Logging configuration
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    
    # Network configuration
    networks:
      - smart-glasses-network

  # Optional: Add a reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: smart-glasses-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - smart-glasses
    networks:
      - smart-glasses-network
    profiles:
      - production

  # Optional: Add monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: smart-glasses-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - smart-glasses-network
    profiles:
      - monitoring

  # Optional: Add Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: smart-glasses-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - smart-glasses-network
    profiles:
      - monitoring

networks:
  smart-glasses-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
